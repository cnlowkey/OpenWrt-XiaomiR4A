#
# Copyright (c) 2021-2022 smalls0098 <https://smalls0098.com>
#
# This is free software, licensed under the BSD 3-Clause License.
# See /LICENSE for more information.
#
# https://github.com/cnlowkey/OpenWrt-XiaomiR4A
# Description: Build OpenWrt using GitHub Actions
#

name: XIAOMI-R4A
on:
  workflow_dispatch:
    inputs:
      build:
        description: '若要编译固件，请输入true'
        required: true
        default: 'true'
      version_description:
        description: '输入版本描述'     
        required: true
        default: '升级内容：内核升级，更新应用版本'
      cpu_overclock:
        description: '超频到1100Mhz'
        required: false
        default: 'false'
        type: boolean
      release:
        description: '上传到release'
        required: false
        default: 'true'
        type: boolean
      artifact:
        description: '上传到artifact'
        required: false
        default: 'false'
        type: boolean

jobs:
  build_openwrt:
    name: 固件编译
    runs-on: ubuntu-latest
    if: github.event.inputs.build == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 环境准备
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: 设置环境变量
        run: |
          echo "CLONE_SH=source/clone.sh" >> $GITHUB_ENV
          echo "FEEDS_SH=source/feeds.sh" >> $GITHUB_ENV
          echo "MODIFY_SH=source/modify.sh" >> $GITHUB_ENV
          echo "RELEASE_TITLE=lede for xiaomi 4a gigabit" >> $GITHUB_ENV
          echo "ZH_TITLE=小米4A千兆版lede固件" >> $GITHUB_ENV
          echo "KEY_INFO=版本：lean lede源码<br/>登陆IP 192.168.31.1，密码password" >> $GITHUB_ENV
      - name: 下载依赖
        run: |
          chmod +x $CLONE_SH
          sh $CLONE_SH
          ls -l
      - name: 升级feeds
        run: |
          cd lede
          ./scripts/feeds update -a
          cd ..
          chmod +x $FEEDS_SH
          sh $FEEDS_SH
          cd lede
          ./scripts/feeds install -a
          ./scripts/feeds install -a
      - name: 修改配置
        run: |
          if [ ${{ github.event.inputs.cpu_overclock }} == true ]
          then
            sed -i '/mt7621-fix-cpu.patch/ s/#//' $MODIFY_SH
          fi
          ls -l
          chmod +x $MODIFY_SH
          sh $MODIFY_SH
      - name: 生成.config文件
        run: |
          mv -f source/.config lede/.config
          sed -i 's/^[ \t]*//g' lede/.config
          cd lede
          ls -l
          make defconfig
      - name: Make download
        run: |
          cd lede
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: 编译
        run: |
          cd lede
          make -j$(($(nproc) + 1)) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
      - name: 整理固件目录
        run: |
          cd lede
          mkdir -p ./collected_firmware/packages
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./collected_firmware
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./collected_firmware/packages
          cd collected_firmware
          zip -r ../allfiles.zip ./*
          cd packages
          zip -r ../../packages.zip ./*
          cd ..
          ls -l
      - name: 获取当前日期
        run: |
          CURRENT_TIME=$(TZ=Asia/Shanghai date +'%y.%-m.%-d.%H%M%S')
          CURRENT_TIME=${CURRENT_TIME:1}
          echo "TAG_NAME=${CURRENT_TIME}" >> $GITHUB_ENV
          echo "RELEASE_PRE=${CURRENT_TIME%.*}" >> $GITHUB_ENV
      - name: 上传固件到release
        if: github.event.inputs.release == 'true' && env.RELEASE_FIRMWARE_VALUE != ''
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_FIRMWARE }}
          file: collected_firmware/*
          tag: ${{ env.TAG_NAME }}
          release_name: "${{ env.RELEASE_PRE }} ${{ env.RELEASE_TITLE }}"
          overwrite: true
          prerelease: false
          body: "${{ env.ZH_TITLE }}<br/>${{ env.KEY_INFO }}<br/>${{ github.event.inputs.version_description }}"
          file_glob: true
        env:
          RELEASE_FIRMWARE_VALUE: ${{ secrets.RELEASE_FIRMWARE }}
      - name: 上传固件到artifact
        if: github.event.inputs.artifact == 'true' || failure()
        uses: actions/upload-artifact@v3
        with:
          name: collected_firmware
          path: |
            collected_firmware/
            !collected_firmware/*.zip